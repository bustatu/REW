<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ia nivelele din fisiere si le incarca (nu toate)

///Centreaza view-ul
view_xview[0]=x;
view_yview[0]=y;

///Seteaza optiunea
option=obj_dircontroller.option;
with(obj_dircontroller){instance_destroy();}
dir="";
switch(option){
 case 1:{dir="CustomLevels";break;}
 case 2:{dir="CommunitySelected";break;}
 default:{dir="LevelPack"+string(option-2);break;}
}

///Cauta nivelele
files[0]=0;
files[1]=file_find_first(dir+"/*.lvl",0);
for(var i=1;files[i]!="";i++){
 files[i+1]=file_find_next();files[0]++;
}
if(files[1]==""){files[0]=0;}

///Incarcam fiecare harta
maps=ds_map_create();
ds_map_add(maps,"count",files[0]);
for(var i=1;i&lt;=ds_map_find_value(maps,"count");i++){
 ds_map_add(maps,"fname"+string(i),files[i]);
 files[i]=file_text_open_read(dir+"/"+files[i]);
 ds_map_add(maps,"name"+string(i),file_text_read_string(files[i]));
 file_text_close(files[i]);
}

///Selectate
selected[0]=ds_map_find_value(maps,"count");
for(var i=1;i&lt;=selected[0];i++){selected[i]=0;}
selected[1]=1;

///Care nivel sa fie incarcat
loaded=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step
///Verifica daca a fost apasat butonul de iesire
if(obj_controlmanager.button_10&amp;&amp;!obj_controlmanager.delay){
 ///Distruge toate si du-te la selectat de capitole
 with(obj_plr){instance_destroy();}
 with(obj_wall){instance_destroy();}
 instance_create(0,0,obj_dircontroller);
 instance_destroy();
}

///Daca nu a fost selectat un nivel
if(loaded==0){
 ///Verifica daca ma duc jos sau sus
 if((obj_controlmanager.axe_sj&lt;-obj_controlmanager.deadzone)&amp;&amp;!obj_controlmanager.delay){menu_go_up(2);}
 else if((obj_controlmanager.axe_sj&gt;obj_controlmanager.deadzone)&amp;&amp;!obj_controlmanager.delay){menu_go_down(2);}
 
 ///Incarca nivelul daca este apasat si daca AVEM nivele
 if(files[0]&amp;&amp;obj_controlmanager.button_3&amp;&amp;!obj_controlmanager.delay){
  loaded=1;
  while(loaded&lt;=selected[0]&amp;&amp;selected[loaded]!=1){loaded++;}
 }
}
else if(loaded!=-1){load_level(loaded);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scrie numele nivelelor daca sunt in meniu
if(loaded==0){
 if(ds_map_find_value(maps,"count")==0){
  draw_set_color(c_white);
  draw_text_transformed(30,230,"No levels in folder",2,2,0);
 }
 for(var i=1;i&lt;=ds_map_find_value(maps,"count");i++){
  if(selected[i]){draw_set_color(make_color_rgb(0,255,0));}
  else {draw_set_color(make_color_rgb(255,255,255));}
  draw_text_transformed(30,i*40,string(i)+". "+ds_map_find_value(maps,"name"+string(i)),2,2,0);
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
